<?xml version="1.0" encoding="gb2312"?>
<TypeDef>
	<Type Name="char" CType="sbyte" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(sbyte))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="short" CType="short" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(short))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="int" CType="int" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(int))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="BYTE" CType="byte" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(byte))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="WORD" CType="ushort" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(ushort))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT" CType="uint" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(uint))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="INT64" CType="long" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(long))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT64" CType="ulong" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(ulong))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="String" CType="string" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="(&lt;Variable&gt;!=null?CSmartStruct.GetStringMemberSize((uint)&lt;Variable&gt;.Length*sizeof(char)):0)" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;=&quot;&quot;;" InitOperation="" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="CSmartStruct" CType="CSmartStruct" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;.CloneFrom(Value);&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetStructMemberSize(&lt;Variable&gt;.GetDataLen())" ReferenceDefine="&lt;Type&gt;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;=new &lt;Type&gt;();" InitOperation="" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;.CloneFrom(&lt;RightValue&gt;&lt;Variable&gt;);&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;.CloneFrom(Value);&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="OBJECT_ID" CType="OBJECT_ID" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;.ID)) FailCount++;" UnpackOperation="&lt;Variable&gt;.ID=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize((uint)Marshal.SizeOf(typeof(OBJECT_ID)))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.ID=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="float" CType="float" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct.GetFixMemberSize(sizeof(float))" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="StringEx" CType="string" PackOperation="if(!Packet.AddMember((ushort)&lt;SST_NAME&gt;.&lt;SST_ID&gt;,&lt;Variable&gt;)) FailCount++;" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="(&lt;Variable&gt;!=null?CSmartStruct.GetStringMemberSize((uint)&lt;Variable&gt;.Length*sizeof(char)):0)" ReferenceDefine="ref &lt;Type&gt;" ReferenceUse="ref &lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;=&quot;&quot;;" InitOperation="" CloneOperation="&lt;IfInDataObject&gt;if((Flag&amp;(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;)!=0)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="" GetMethodDefine="public &lt;Type&gt; Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="" SetMethodDefine="public void Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=(ulong)&lt;ModifyFlagEnumName&gt;.&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
</TypeDef>
