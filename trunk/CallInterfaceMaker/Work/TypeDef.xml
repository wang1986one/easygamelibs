<?xml version="1.0" encoding="gb2312"?>
<TypeDef>
	<Type Name="char" CType="char" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(char))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="short" CType="short" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(short))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="int" CType="int" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(int))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="BYTE" CType="BYTE" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(BYTE))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="WORD" CType="WORD" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(WORD))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT" CType="UINT" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(UINT))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="INT64" CType="INT64" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(INT64))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="UINT64" CType="UINT64" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(UINT64))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="String" CType="LPCTSTR" PackOperation="if( &lt;Variable&gt; != NULL)&rt;&nl;{&rt;&nl;&tab;CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);&rt;&nl;}" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="(&lt;Variable&gt;!=NULL?CSmartStruct::GetStringMemberSize(_tcslen(&lt;Variable&gt;)):0)" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=NULL;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="CSmartStruct" CType="CSmartStruct" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;.CloneFrom(Value);&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetStructMemberSize(&lt;Variable&gt;.GetDataLen())" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;.CloneFrom(&lt;RightValue&gt;&lt;Variable&gt;);&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="const &lt;Type&gt;&amp; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline const &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;.CloneFrom(Value);&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="OBJECT_ID" CType="OBJECT_ID" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;.ID),FailCount);" UnpackOperation="&lt;Variable&gt;.ID=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(OBJECT_ID))" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.ID=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="float" CType="float" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="&lt;Variable&gt;=Value;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetFixMemberSize(sizeof(float))" ReferenceDefine="&lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;=0;" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline &lt;Type&gt; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(&lt;Type&gt; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(&lt;Type&gt; Value)&rt;&nl;{&rt;&nl;&tab;if(&lt;Variable&gt;!=Value)&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;&tab;}&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="StringEx" CType="CEasyString" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,&lt;Variable&gt;),FailCount);" UnpackOperation="Value.GetStr(&lt;Variable&gt;);&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetStringMemberSize(&lt;Variable&gt;.GetLength())" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="const &lt;Type&gt;&amp; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline const &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<Type Name="ByteArray" CType="CEasyBuffer" PackOperation="CHECK_SMART_STRUCT_ADD(Packet.AddMember(&lt;SST_ID&gt;,(LPCSTR)&lt;Variable&gt;.GetBuffer(),&lt;Variable&gt;.GetUsedSize()),FailCount);" UnpackOperation="&lt;Variable&gt;.Create(Value.GetLength());&rt;&nl;&lt;Variable&gt;.PushBack((LPCSTR)Value,Value.GetLength());&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="CSmartStruct::GetStringMemberSize(&lt;Variable&gt;.GetUsedSize())" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Destory();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="const &lt;Type&gt;&amp; Get&lt;VariableName&gt;() const;" GetMethodDefine="inline const &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;() const&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
</TypeDef>
