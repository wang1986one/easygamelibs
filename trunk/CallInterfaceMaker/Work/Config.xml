<?xml version="1.0" encoding="gb2312"?>
<Config>
	<InterfaceHeaderExport IsExport="true" FileExt="h"/>
	<StructExport IsExport="true" FileExt="h"/>
	<EnumExport IsExport="true" FileExt="h"/>
	<ConstExport IsExport="true" FileExt="h"/>
	<DataStructHeaderExport IsExport="true" FileExt="h"/>
	<InterfaceExport IsExport="true" FileExt="h"/>
	<CallHeaderExport IsExport="true" FileExt="h"/>
	<CallSourceExport IsExport="true" FileExt="cpp"/>
	<HandlerHeaderExport IsExport="true" FileExt="h"/>
	<HandlerSourceExport IsExport="true" FileExt="cpp"/>
	<DataObjectHeaderExport IsExport="true" FileExt="h"/>
	<DataObjectSourceExport IsExport="true" FileExt="cpp"/>
	<DataObjectModifyFlagsExport IsExport="true" FileExt="h"/>
	<DefaultStructGenerateOperations PackOperation="UINT BufferSize;&rt;&nl;void * pBuffer=Packet.PrepareMember(BufferSize);&rt;&nl;CSmartStruct SubPacket(pBuffer,BufferSize,true);&rt;&nl;&lt;IfNotDataObject&gt;if(!&lt;Variable&gt;.MakePacket(SubPacket)) FailCount++;&lt;/IfNotDataObject&gt;&rt;&nl;&lt;IfDataObject&gt;if(!&lt;Variable&gt;.MakePacket(SubPacket,MemberFlags)) FailCount++;&lt;/IfDataObject&gt;&rt;&nl;Packet.FinishMember(&lt;SST_ID&gt;,SubPacket.GetDataLen());" UnpackOperation="&lt;IfNotDataObject&gt;&lt;Variable&gt;.ParsePacket(Value);&lt;/IfNotDataObject&gt;&rt;&nl;&lt;IfDataObject&gt;&lt;Variable&gt;.ParsePacket(Value,MemberFlags);&lt;/IfDataObject&gt;&rt;&nl;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;" SizeCaculateOperation="&lt;IfNotDataObject&gt;CSmartStruct::GetStructMemberSize(&lt;Variable&gt;.GetSmartStructSize()+CSmartStruct::GetEmptyStructSize())&lt;/IfNotDataObject&gt;&rt;&nl;&lt;IfDataObject&gt;CSmartStruct::GetStructMemberSize(&lt;Variable&gt;.GetSmartStructSize(MemberFlags)+CSmartStruct::GetEmptyStructSize())&lt;/IfDataObject&gt;" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="&lt;Type&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;IfNotDataObject&gt;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&lt;/IfNotDataObject&gt;&rt;&nl;&tab;&lt;IfDataObject&gt;&lt;LeftValue&gt;&lt;Variable&gt;.CloneFrom(&lt;RightValue&gt;&lt;Variable&gt;,MemberFlags);&lt;/IfDataObject&gt;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="&lt;Type&gt;&amp; Get&lt;VariableName&gt;();" GetMethodDefine="inline &lt;Type&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const &lt;Type&gt;&amp; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="" ConstIndexOperation=""/>
	<ArrayDefineConfig PackOperation="&lt;IfNeedCheckModifyFlag&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfNeedCheckModifyFlag&gt;&rt;&nl;{&rt;&nl;&tab;UINT BufferSize;&rt;&nl;&tab;void * pBuffer=Packet.PrepareMember(BufferSize);&rt;&nl;&tab;{&rt;&nl;&tab;&tab;CSmartStruct Packet(pBuffer,BufferSize,true);&rt;&nl;&tab;&tab;for(size_t i=0;i&lt;&lt;Variable&gt;.GetCount();i++)&rt;&nl;&tab;&tab;{&rt;&nl;&tab;&tab;&tab;&lt;PackOperation&gt;&rt;&nl;&tab;&tab;}&rt;&nl;&tab;&tab;BufferSize=Packet.GetDataLen();&rt;&nl;&tab;}&rt;&nl;&tab;Packet.FinishMember(&lt;SST_ID&gt;,BufferSize);&rt;&nl;}" UnpackOperation="case &lt;SST_ID&gt;:&rt;&nl;&tab;&lt;IfNeedCheckModifyFlag&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfNeedCheckModifyFlag&gt;&rt;&nl;&tab;{&rt;&nl;&tab;&tab;&lt;Variable&gt;.Clear();&rt;&nl;&tab;&tab;CSmartStruct Packet=Value;&rt;&nl;&tab;&tab;void * Pos=Packet.GetFirstMemberPosition();&rt;&nl;&tab;&tab;while(Pos)&rt;&nl;&tab;&tab;{&rt;&nl;&tab;&tab;&tab;WORD MemberID;&rt;&nl;&tab;&tab;&tab;CSmartValue Value=Packet.GetNextMember(Pos,MemberID);&rt;&nl;&tab;&tab;&tab;switch(MemberID)&rt;&nl;&tab;&tab;&tab;{&rt;&nl;&tab;&tab;&tab;case &lt;SST_ID&gt;:&rt;&nl;&tab;&tab;&tab;&tab;{&tab;&rt;&nl;&tab;&tab;&tab;&tab;&tab;&lt;ArrayElementVariableDefine&gt;&rt;&nl;&tab;&tab;&tab;&tab;&tab;&lt;UnpackOperation&gt;&rt;&nl;&tab;&tab;&tab;&tab;&tab;&lt;Variable&gt;.Add(ArrayElement);&rt;&nl;&tab;&tab;&tab;&tab;}&rt;&nl;&tab;&tab;&tab;&tab;break;&rt;&nl;&tab;&tab;&tab;}&rt;&nl;&tab;&tab;}&rt;&nl;&tab;}&rt;&nl;&tab;break;&rt;&nl;" SizeCaculateOperation="for(size_t i=0;i&lt;&lt;Variable&gt;.GetCount();i++)&rt;&nl;{&rt;&nl;&tab;Size+=&lt;ArrayElementSize&gt;;&rt;&nl;}&rt;&nl;Size+=CSmartStruct::GetStructMemberSize(0);" ReferenceDefine="const &lt;Type&gt;&amp;" ReferenceUse="&lt;Variable&gt;" VariableDefine="CEasyArray&lt;&lt;Type&gt;&gt;&lt;Space&gt;&lt;Variable&gt;;" InitOperation="&lt;Variable&gt;.Clear();&rt;&nl;&lt;Variable&gt;.Create(&lt;ArrayStartLength&gt;,&lt;ArrayGrowLength&gt;);" CloneOperation="&lt;IfInDataObject&gt;if(Flag&amp;&lt;ModifyFlag&gt;)&lt;/IfInDataObject&gt;&rt;&nl;{&rt;&nl;&tab;&lt;LeftValue&gt;&lt;Variable&gt;=&lt;RightValue&gt;&lt;Variable&gt;;&rt;&nl;&tab;&lt;IfInDataObject&gt;&lt;IfMonitorUpdate&gt;UpdateFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&lt;/IfInDataObject&gt;&rt;&nl;}" GetMethodDeclare="CEasyArray&lt;&lt;Type&gt;&gt;&amp; Get&lt;VariableName&gt;();" GetMethodDefine="inline CEasyArray&lt;&lt;Type&gt;&gt;&amp; &lt;ClassName&gt;::Get&lt;VariableName&gt;()&rt;&nl;{&rt;&nl;&tab;return &lt;Variable&gt;;&rt;&nl;}" SetMethodDeclare="void Set&lt;VariableName&gt;(const CEasyArray&lt;&lt;Type&gt;&gt;&amp; Value);" SetMethodDefine="inline void &lt;ClassName&gt;::Set&lt;VariableName&gt;(const CEasyArray&lt;&lt;Type&gt;&gt;&amp; Value)&rt;&nl;{&rt;&nl;&tab;&lt;Variable&gt;=Value;&rt;&nl;&tab;&lt;IfMonitorUpdate&gt;m_ModifyFlag|=&lt;ModifyFlag&gt;;&lt;/IfMonitorUpdate&gt;&rt;&nl;}" IndexOperation="&lt;Variable&gt;[&lt;Index&gt;]" ConstIndexOperation="&lt;Variable&gt;.GetObjectConst(&lt;Index&gt;)"/>
</Config>
