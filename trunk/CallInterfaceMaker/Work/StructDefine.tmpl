<StructDescription>
struct <StructName><BaseStruct>
{
	<Members>
	<SSTIDEnumDefine>
	<StructName>()
	{
		Clear();
	}
	<StructName>(const <StructName>& Value)
	{
		*this=Value;
	}
	void Clear()
	{
		<InitOperations>
	}
	bool MakePacket(CSmartStruct& Packet) const
	{
		UINT FailCount=0;

		<PackOperations>

		return FailCount==0;
	}
	bool ParsePacket(const CSmartStruct& Packet)
	{
		<IfHaveMember>
		void * Pos=Packet.GetFirstMemberPosition();
		while(Pos)
		{
			WORD MemberID;
			CSmartValue Value=Packet.GetNextMember(Pos,MemberID);
			switch(MemberID)
			{
			<UnpackOperations>
			}
		}
		</IfHaveMember>
		return true;
	}
	UINT GetSmartStructSize() const
	{
		UINT Size=0;
		<PacketSizes>
		return Size;
	}
	void CloneFrom(const <StructName>& Value)
	{
		<CloneFromOperations>
	}
	<StructName>& operator=(const <StructName>& Value)
	{
		CloneFrom(Value);
		return *this;
	}
};

